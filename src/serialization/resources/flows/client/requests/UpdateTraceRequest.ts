/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as Humanloop from "../../../../../api/index";
import * as core from "../../../../../core";
import { TraceStatus } from "../../../../types/TraceStatus";

export const UpdateTraceRequest: core.serialization.Schema<
    serializers.UpdateTraceRequest.Raw,
    Humanloop.UpdateTraceRequest
> = core.serialization.object({
    inputs: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    output: core.serialization.string().optional(),
    error: core.serialization.string().optional(),
    traceStatus: core.serialization.property("trace_status", TraceStatus),
});

export declare namespace UpdateTraceRequest {
    interface Raw {
        inputs?: Record<string, unknown> | null;
        output?: string | null;
        error?: string | null;
        trace_status: TraceStatus.Raw;
    }
}
