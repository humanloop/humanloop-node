/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Humanloop from "../../api/index";
import * as core from "../../core";
import { ExperimentStatus } from "./ExperimentStatus";
import { ExperimentVersionResponse } from "./ExperimentVersionResponse";
import { BaseMetricResponse } from "./BaseMetricResponse";
import { PositiveLabel } from "./PositiveLabel";

export const ExperimentResponse: core.serialization.ObjectSchema<
    serializers.ExperimentResponse.Raw,
    Humanloop.ExperimentResponse
> = core.serialization.object({
    id: core.serialization.string(),
    fileId: core.serialization.property("file_id", core.serialization.string()),
    name: core.serialization.string(),
    status: ExperimentStatus,
    versions: core.serialization.list(ExperimentVersionResponse).optional(),
    metric: BaseMetricResponse,
    positiveLabels: core.serialization.property("positive_labels", core.serialization.list(PositiveLabel)),
    createdAt: core.serialization.property("created_at", core.serialization.date()),
    updatedAt: core.serialization.property("updated_at", core.serialization.date()),
});

export declare namespace ExperimentResponse {
    interface Raw {
        id: string;
        file_id: string;
        name: string;
        status: ExperimentStatus.Raw;
        versions?: ExperimentVersionResponse.Raw[] | null;
        metric: BaseMetricResponse.Raw;
        positive_labels: PositiveLabel.Raw[];
        created_at: string;
        updated_at: string;
    }
}
