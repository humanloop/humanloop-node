/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Humanloop from "../../api/index";
import * as core from "../../core";
import { ChatMessageWithToolCallContent } from "./ChatMessageWithToolCallContent";
import { ChatRole } from "./ChatRole";
import { ToolCall } from "./ToolCall";
import { FunctionTool } from "./FunctionTool";

export const ChatMessageWithToolCall: core.serialization.ObjectSchema<
    serializers.ChatMessageWithToolCall.Raw,
    Humanloop.ChatMessageWithToolCall
> = core.serialization.object({
    content: ChatMessageWithToolCallContent.optional(),
    name: core.serialization.string().optional(),
    toolCallId: core.serialization.property("tool_call_id", core.serialization.string().optional()),
    role: ChatRole,
    toolCalls: core.serialization.property("tool_calls", core.serialization.list(ToolCall).optional()),
    toolCall: core.serialization.property("tool_call", FunctionTool.optional()),
});

export declare namespace ChatMessageWithToolCall {
    interface Raw {
        content?: ChatMessageWithToolCallContent.Raw | null;
        name?: string | null;
        tool_call_id?: string | null;
        role: ChatRole.Raw;
        tool_calls?: ToolCall.Raw[] | null;
        tool_call?: FunctionTool.Raw | null;
    }
}
