/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Humanloop from "../../api/index";
import * as core from "../../core";
import { MonitoringEvaluatorState } from "./MonitoringEvaluatorState";

export const MonitoringEvaluatorResponse: core.serialization.ObjectSchema<
    serializers.MonitoringEvaluatorResponse.Raw,
    Humanloop.MonitoringEvaluatorResponse
> = core.serialization.object({
    versionReference: core.serialization.property(
        "version_reference",
        core.serialization.lazy(() => serializers.VersionReferenceResponse),
    ),
    version: core.serialization.lazyObject(() => serializers.EvaluatorResponse).optional(),
    state: MonitoringEvaluatorState,
    createdAt: core.serialization.property("created_at", core.serialization.date()),
    updatedAt: core.serialization.property("updated_at", core.serialization.date()),
});

export declare namespace MonitoringEvaluatorResponse {
    export interface Raw {
        version_reference: serializers.VersionReferenceResponse.Raw;
        version?: serializers.EvaluatorResponse.Raw | null;
        state: MonitoringEvaluatorState.Raw;
        created_at: string;
        updated_at: string;
    }
}
