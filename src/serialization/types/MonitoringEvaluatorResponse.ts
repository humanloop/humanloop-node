/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Humanloop from "../../api/index";
import * as core from "../../core";
import { VersionReferenceResponse } from "./VersionReferenceResponse";
import { EvaluatorResponse } from "./EvaluatorResponse";
import { MonitoringEvaluatorState } from "./MonitoringEvaluatorState";

export const MonitoringEvaluatorResponse: core.serialization.ObjectSchema<
    serializers.MonitoringEvaluatorResponse.Raw,
    Humanloop.MonitoringEvaluatorResponse
> = core.serialization.object({
    versionReference: core.serialization.property("version_reference", VersionReferenceResponse),
    version: EvaluatorResponse.optional(),
    state: MonitoringEvaluatorState,
    createdAt: core.serialization.property("created_at", core.serialization.date()),
    updatedAt: core.serialization.property("updated_at", core.serialization.date()),
});

export declare namespace MonitoringEvaluatorResponse {
    interface Raw {
        version_reference: VersionReferenceResponse.Raw;
        version?: EvaluatorResponse.Raw | null;
        state: MonitoringEvaluatorState.Raw;
        created_at: string;
        updated_at: string;
    }
}
