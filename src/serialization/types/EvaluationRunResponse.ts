/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Humanloop from "../../api/index";
import * as core from "../../core";
import { DatasetResponse } from "./DatasetResponse";
import { RunVersionResponse } from "./RunVersionResponse";
import { UserResponse } from "./UserResponse";
import { EvaluationStatus } from "./EvaluationStatus";

export const EvaluationRunResponse: core.serialization.ObjectSchema<
    serializers.EvaluationRunResponse.Raw,
    Humanloop.EvaluationRunResponse
> = core.serialization.object({
    id: core.serialization.string(),
    dataset: DatasetResponse.optional(),
    version: RunVersionResponse.optional(),
    orchestrated: core.serialization.boolean(),
    addedAt: core.serialization.property("added_at", core.serialization.date()),
    createdAt: core.serialization.property("created_at", core.serialization.date()),
    createdBy: core.serialization.property("created_by", UserResponse.optional()),
    status: EvaluationStatus,
    control: core.serialization.boolean(),
});

export declare namespace EvaluationRunResponse {
    interface Raw {
        id: string;
        dataset?: DatasetResponse.Raw | null;
        version?: RunVersionResponse.Raw | null;
        orchestrated: boolean;
        added_at: string;
        created_at: string;
        created_by?: (UserResponse.Raw | undefined) | null;
        status: EvaluationStatus.Raw;
        control: boolean;
    }
}
