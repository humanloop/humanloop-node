/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Humanloop from "../../api/index";
import * as core from "../../core";
import { EvaluationDebugResultResponseValue } from "./EvaluationDebugResultResponseValue";

export const EvaluationDebugResultResponse: core.serialization.ObjectSchema<
    serializers.EvaluationDebugResultResponse.Raw,
    Humanloop.EvaluationDebugResultResponse
> = core.serialization.object({
    logId: core.serialization.property("log_id", core.serialization.string()),
    log: core.serialization.lazyObject(async () => (await import("..")).LogResponse),
    datapointId: core.serialization.property("datapoint_id", core.serialization.string().optional()),
    llmEvaluationLog: core.serialization.property(
        "llm_evaluation_log",
        core.serialization.lazyObject(async () => (await import("..")).LogResponse).optional()
    ),
    value: EvaluationDebugResultResponseValue.optional(),
    error: core.serialization.string().optional(),
});

export declare namespace EvaluationDebugResultResponse {
    interface Raw {
        log_id: string;
        log: serializers.LogResponse.Raw;
        datapoint_id?: string | null;
        llm_evaluation_log?: serializers.LogResponse.Raw | null;
        value?: EvaluationDebugResultResponseValue.Raw | null;
        error?: string | null;
    }
}
