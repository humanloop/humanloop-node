/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Humanloop from "../../api/index";
import * as core from "../../core";
import { EvaluatedVersionResponse } from "./EvaluatedVersionResponse";
import { DatapointResponse } from "./DatapointResponse";

export const EvaluationReportLogResponse: core.serialization.ObjectSchema<
    serializers.EvaluationReportLogResponse.Raw,
    Humanloop.EvaluationReportLogResponse
> = core.serialization.object({
    evaluatedVersion: core.serialization.property("evaluated_version", EvaluatedVersionResponse),
    datapoint: DatapointResponse,
    log: core.serialization.lazyObject(() => serializers.LogResponse).optional(),
    evaluatorLogs: core.serialization.property(
        "evaluator_logs",
        core.serialization.list(core.serialization.lazyObject(() => serializers.LogResponse))
    ),
});

export declare namespace EvaluationReportLogResponse {
    interface Raw {
        evaluated_version: EvaluatedVersionResponse.Raw;
        datapoint: DatapointResponse.Raw;
        log?: serializers.LogResponse.Raw | null;
        evaluator_logs: serializers.LogResponse.Raw[];
    }
}
