/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Humanloop from "../../api/index";
import * as core from "../../core";
import { DatapointResponse } from "./DatapointResponse";

export const EvaluationLogResponse: core.serialization.ObjectSchema<
    serializers.EvaluationLogResponse.Raw,
    Humanloop.EvaluationLogResponse
> = core.serialization.object({
    runId: core.serialization.property("run_id", core.serialization.string()),
    datapoint: DatapointResponse.optional(),
    log: core.serialization.lazy(() => serializers.LogResponse),
    evaluatorLogs: core.serialization.property(
        "evaluator_logs",
        core.serialization.list(core.serialization.lazy(() => serializers.LogResponse)),
    ),
});

export declare namespace EvaluationLogResponse {
    interface Raw {
        run_id: string;
        datapoint?: DatapointResponse.Raw | null;
        log: serializers.LogResponse.Raw;
        evaluator_logs: serializers.LogResponse.Raw[];
    }
}
