/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Humanloop from "../../api/index";
import * as core from "../../core";

export const ExperimentVersionResponse: core.serialization.ObjectSchema<
    serializers.ExperimentVersionResponse.Raw,
    Humanloop.ExperimentVersionResponse
> = core.serialization.object({
    mean: core.serialization.number().optional(),
    spread: core.serialization.number().optional(),
    trialsCount: core.serialization.property("trials_count", core.serialization.number()),
    active: core.serialization.boolean(),
    id: core.serialization.string(),
    commitMessage: core.serialization.property("commit_message", core.serialization.string().optional()),
    versionId: core.serialization.property("version_id", core.serialization.string()),
    createdAt: core.serialization.property("created_at", core.serialization.date()),
    updatedAt: core.serialization.property("updated_at", core.serialization.date()),
});

export declare namespace ExperimentVersionResponse {
    interface Raw {
        mean?: number | null;
        spread?: number | null;
        trials_count: number;
        active: boolean;
        id: string;
        commit_message?: string | null;
        version_id: string;
        created_at: string;
        updated_at: string;
    }
}
