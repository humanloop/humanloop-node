/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Humanloop from "../../../../index";

/**
 * @example
 *     {
 *         messages: [{
 *                 role: "user",
 *                 content: "I need to withdraw $1000"
 *             }, {
 *                 role: "assistant",
 *                 content: "Of course! Would you like to use your savings or checking account?"
 *             }],
 *         outputMessage: {
 *             role: "assistant",
 *             content: "I'm sorry, I can't help with that."
 *         },
 *         logStatus: "complete"
 *     }
 */
export interface UpdateAgentLogRequest {
    /** List of chat messages that were used as an input to the Flow. */
    messages?: Humanloop.ChatMessage[];
    /** The output message returned by this Flow. */
    outputMessage?: Humanloop.ChatMessage;
    /** The inputs passed to the Flow Log. */
    inputs?: Record<string, unknown>;
    /** The output of the Flow Log. Provide None to unset existing `output` value. Provide either this, `output_message` or `error`. */
    output?: string;
    /** The error message of the Flow Log. Provide None to unset existing `error` value. Provide either this, `output_message` or `output`. */
    error?: string;
    /** Status of the Flow Log. When a Flow Log is updated to `complete`, no more Logs can be added to it. Monitoring Evaluators will only run on `complete` Flow Logs. */
    logStatus?: Humanloop.LogStatus;
}
