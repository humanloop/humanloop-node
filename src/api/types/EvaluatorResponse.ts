/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Humanloop from "../index";

/**
 * Version of the Evaluator used to provide judgments.
 */
export interface EvaluatorResponse {
    /** Path of the Evaluator including the Evaluator name, which is used as a unique identifier. */
    path: string;
    /** Unique identifier for the Evaluator. */
    id: string;
    /** Name of the Evaluator, which is used as a unique identifier. */
    name: string;
    /** Unique identifier for the specific Evaluator Version. If no query params provided, the default deployed Evaluator Version is returned. */
    versionId: string;
    type?: "evaluator";
    /** The list of environments the Prompt Version is deployed to. */
    environments?: Humanloop.EnvironmentResponse[];
    createdAt: Date;
    updatedAt: Date;
    /** The user who created the Prompt. */
    createdBy?: Humanloop.UserResponse;
    status: Humanloop.VersionStatus;
    lastUsedAt: Date;
    /** Message describing the changes made. */
    commitMessage?: string;
    spec: Humanloop.EvaluatorResponseSpec;
    /** The number of logs that have been generated for this Prompt Version */
    versionLogsCount: number;
    /** The number of logs that have been generated across all Prompt Versions */
    totalLogsCount: number;
    /** Inputs associated to the Prompt. Inputs correspond to any of the variables used within the Prompt template. */
    inputs: Humanloop.InputResponse[];
    /** Evaluators that have been attached to this Prompt that are used for monitoring logs. */
    evaluators?: Humanloop.MonitoringEvaluatorResponse[];
    /** Aggregation of Evaluator results for the Evaluator Version. */
    evaluatorAggregates?: Humanloop.EvaluatorAggregate[];
}
