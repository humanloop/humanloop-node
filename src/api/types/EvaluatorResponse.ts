/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Humanloop from "../index";

/**
 * Version of the Evaluator used to provide judgments.
 */
export interface EvaluatorResponse {
    /** Path of the Evaluator including the Evaluator name, which is used as a unique identifier. */
    path: string;
    /** Unique identifier for the Evaluator. */
    id: string;
    /** ID of the directory that the file is in on Humanloop. */
    directoryId?: string;
    /** Unique name for the Evaluator version. Version names must be unique for a given Evaluator. */
    versionName?: string;
    /** Description of the version, e.g., the changes made in this version. */
    versionDescription?: string;
    spec: Humanloop.EvaluatorResponseSpec;
    /** Name of the Evaluator, which is used as a unique identifier. */
    name: string;
    /** Description of the Evaluator. */
    description?: string;
    /** Long description of the file. */
    readme?: string;
    /** List of tags associated with the file. */
    tags?: string[];
    /** Unique identifier for the specific Evaluator Version. If no query params provided, the default deployed Evaluator Version is returned. */
    versionId: string;
    type?: "evaluator";
    /** The list of environments the Evaluator Version is deployed to. */
    environments?: Humanloop.EnvironmentResponse[];
    createdAt: Date;
    updatedAt: Date;
    /** The user who created the Evaluator. */
    createdBy?: Humanloop.UserResponse | undefined;
    lastUsedAt: Date;
    /** The number of logs that have been generated for this Evaluator Version */
    versionLogsCount: number;
    /** The number of logs that have been generated across all Evaluator Versions */
    totalLogsCount: number;
    /** Inputs associated to the Evaluator. Inputs correspond to any of the variables used within the Evaluator template. */
    inputs: Humanloop.InputResponse[];
    /** Evaluators that have been attached to this Evaluator that are used for monitoring logs. */
    evaluators?: Humanloop.MonitoringEvaluatorResponse[];
    /** Aggregation of Evaluator results for the Evaluator Version. */
    evaluatorAggregates?: Humanloop.EvaluatorAggregate[];
    /** Additional fields to describe the Evaluator. Helpful to separate Evaluator versions from each other with details on how they were created or used. */
    attributes?: Record<string, unknown>;
}
