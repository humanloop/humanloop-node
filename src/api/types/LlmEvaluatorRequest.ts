/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Humanloop from "../index";

export interface LlmEvaluatorRequest {
    /** Whether this Evaluator is target-free or target-required. */
    argumentsType: Humanloop.EvaluatorArgumentsType;
    /** The type of the return value of the Evaluator. */
    returnType: Humanloop.EvaluatorReturnTypeEnum;
    /** Additional fields to describe the Evaluator. Helpful to separate Evaluator versions from each other with details on how they were created or used. */
    attributes?: Record<string, unknown>;
    /** The options that can be applied as judgments. Only for Evaluators with `return_type` of 'boolean', 'select' or 'multi_select'. */
    options?: Humanloop.EvaluatorJudgmentOptionResponse[];
    /** Limits on the judgment that can be applied. Only for Evaluators with `return_type` of 'number'. */
    numberLimits?: Humanloop.EvaluatorJudgmentNumberLimit;
    /** The valence of the number judgment. Only for Evaluators with `return_type` of 'number'. If 'positive', a higher number is better. If 'negative', a lower number is better. */
    numberValence?: Humanloop.Valence;
    evaluatorType: "llm";
    /** The prompt parameters used to generate. */
    prompt?: Humanloop.PromptKernelRequest;
}
