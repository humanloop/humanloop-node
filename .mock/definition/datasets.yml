imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /datasets
      method: GET
      auth: true
      docs: Get a list of Datasets.
      pagination:
        offset: $request.page
        results: $response.records
      display-name: 'List '
      request:
        name: ListDatasetsGetRequest
        query-parameters:
          page:
            type: optional<integer>
            docs: Page offset for pagination.
          size:
            type: optional<integer>
            docs: Page size for pagination. Number of Datasets to fetch.
          name:
            type: optional<string>
            docs: Case-insensitive filter for Dataset name.
          user_filter:
            type: optional<string>
            docs: >-
              Case-insensitive filter for users in the Dataset. This filter
              matches against both email address and name of users.
          sort_by:
            type: optional<root.ProjectSortBy>
            docs: Field to sort Datasets by
          order:
            type: optional<root.SortOrder>
            docs: Direction to sort by.
      response:
        docs: Successful Response
        type: root.PaginatedDatasetResponse
      errors:
        - root.UnprocessableEntityError
      examples:
        - response:
            body:
              records:
                - path: path
                  id: id
                  name: name
                  version_id: version_id
                  type: dataset
                  environments:
                    - id: id
                      created_at: '2024-01-15T09:30:00Z'
                      name: name
                      tag: default
                  created_at: '2024-01-15T09:30:00Z'
                  updated_at: '2024-01-15T09:30:00Z'
                  created_by:
                    id: id
                    email_address: email_address
                  status: uncommitted
                  last_used_at: '2024-01-15T09:30:00Z'
                  commit_message: commit_message
                  datapoints_count: 1
                  datapoints:
                    - id: id
              page: 1
              size: 1
              total: 1
    upsert:
      path: /datasets
      method: POST
      auth: true
      docs: >-
        Create a Dataset or update it with a new version if it already exists.


        Datasets are identified by the `ID` or their `path`. The datapoints
        determine the versions of the Dataset.


        By default, the new Dataset version will be set to the list of
        Datapoints provided in

        the request. You can also create a new version by adding or removing
        Datapoints from an existing version

        by specifying `action` as `add` or `remove` respectively. In this case,
        you may specify

        the `version_id` or `environment` query parameters to identify the
        existing version to base

        the new version on. If neither is provided, the default deployed version
        will be used.


        If you provide a commit message, then the new version will be committed;

        otherwise it will be uncommitted. If you try to commit an already
        committed version,

        an exception will be raised.


        Humanloop also deduplicates Datapoints. If you try to add a Datapoint
        that already

        exists, it will be ignored. If you intentionally want to add a duplicate
        Datapoint,

        you can add a unique identifier to the Datapoint's inputs such as
        `{_dedupe_id: <unique ID>}`.
      display-name: Upsert
      request:
        name: DatasetsRequest
        query-parameters:
          version_id:
            type: optional<string>
            docs: >-
              ID of the specific Dataset version to base the created Version on.
              Only used when `action` is `"add"` or `"remove"`.
          environment:
            type: optional<string>
            docs: >-
              Name of the Environment identifying a deployed Version to base the
              created Version on. Only used when `action` is `"add"` or
              `"remove"`.
        body:
          properties:
            path:
              type: optional<string>
              docs: >-
                Path of the Dataset, including the name, which is used as a
                unique identifier.
            id:
              type: optional<string>
              docs: ID for an existing Dataset to update.
            datapoints:
              docs: >-
                The Datapoints to create this Dataset version with. Modify the
                `action` field to determine how these Datapoints are used.
              type: list<root.CreateDatapointRequest>
            action:
              type: optional<root.UpdateDatesetAction>
              docs: >-
                The action to take with the provided Datapoints.

                 - If `"set"`, the created version will only contain the Datapoints provided in this request. 
                 - If `"add"`, the created version will contain the Datapoints provided in this request in addition to the Datapoints in the target version. 
                 - If `"remove"`, the created version will contain the Datapoints in the target version except for the Datapoints provided in this request. 

                If `"add"` or `"remove"`, one of the `version_id` or
                `environment` query parameters may be provided.
            commit_message:
              type: optional<string>
              docs: >-
                Message describing the changes made. If provided, a committed
                version of the Dataset is created. Otherwise, an uncommitted
                version is created.
      response:
        docs: Successful Response
        type: root.DatasetResponse
      errors:
        - root.UnprocessableEntityError
      examples:
        - request:
            datapoints:
              - {}
          response:
            body:
              path: path
              id: id
              name: name
              version_id: version_id
              type: dataset
              environments:
                - id: id
                  created_at: '2024-01-15T09:30:00Z'
                  name: name
                  tag: default
              created_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_by:
                id: id
                email_address: email_address
                full_name: full_name
              status: uncommitted
              last_used_at: '2024-01-15T09:30:00Z'
              commit_message: commit_message
              datapoints_count: 1
              datapoints:
                - inputs:
                    inputs: inputs
                  messages:
                    - role: user
                  target:
                    target: target
                  id: id
    get:
      path: /datasets/{id}
      method: GET
      auth: true
      docs: >-
        Retrieve the Dataset with the given ID.


        Unless `include_datapoints` is set to `true`, the response will not
        include

        the Datapoints.

        Use the List Datapoints endpoint (`GET /{id}/datapoints`) to efficiently

        retrieve Datapoints for a large Dataset.


        By default, the deployed version of the Dataset is returned. Use the
        query parameters

        `version_id` or `environment` to target a specific version of the
        Dataset.
      path-parameters:
        id:
          type: string
          docs: Unique identifier for Dataset.
      display-name: Get
      request:
        name: GetDatasetsIdGetRequest
        query-parameters:
          version_id:
            type: optional<string>
            docs: A specific Version ID of the Dataset to retrieve.
          environment:
            type: optional<string>
            docs: Name of the Environment to retrieve a deployed Version from.
          include_datapoints:
            type: optional<boolean>
            docs: >-
              If set to `true`, include all Datapoints in the response. Defaults
              to `false`. Consider using the paginated List Datapoints endpoint
              instead.
      response:
        docs: Successful Response
        type: root.DatasetResponse
      errors:
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              path: path
              id: id
              name: name
              version_id: version_id
              type: dataset
              environments:
                - id: id
                  created_at: '2024-01-15T09:30:00Z'
                  name: name
                  tag: default
              created_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_by:
                id: id
                email_address: email_address
                full_name: full_name
              status: uncommitted
              last_used_at: '2024-01-15T09:30:00Z'
              commit_message: commit_message
              datapoints_count: 1
              datapoints:
                - inputs:
                    inputs: inputs
                  messages:
                    - role: user
                  target:
                    target: target
                  id: id
    delete:
      path: /datasets/{id}
      method: DELETE
      auth: true
      docs: Delete the Dataset with the given ID.
      path-parameters:
        id:
          type: string
          docs: Unique identifier for Dataset.
      display-name: Delete
      errors:
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            id: id
    move:
      path: /datasets/{id}
      method: PATCH
      auth: true
      docs: Update the Dataset with the given ID.
      path-parameters:
        id:
          type: string
          docs: Unique identifier for Dataset.
      display-name: Move
      request:
        name: UpdateDatasetRequest
        body:
          properties:
            path:
              type: optional<string>
              docs: >-
                Path of the Dataset including the Dataset name, which is used as
                a unique identifier.
            name:
              type: optional<string>
              docs: Name of the Dataset, which is used as a unique identifier.
      response:
        docs: Successful Response
        type: root.DatasetResponse
      errors:
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            id: id
          request: {}
          response:
            body:
              path: path
              id: id
              name: name
              version_id: version_id
              type: dataset
              environments:
                - id: id
                  created_at: '2024-01-15T09:30:00Z'
                  name: name
                  tag: default
              created_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_by:
                id: id
                email_address: email_address
                full_name: full_name
              status: uncommitted
              last_used_at: '2024-01-15T09:30:00Z'
              commit_message: commit_message
              datapoints_count: 1
              datapoints:
                - inputs:
                    inputs: inputs
                  messages:
                    - role: user
                  target:
                    target: target
                  id: id
    listDatapoints:
      path: /datasets/{id}/datapoints
      method: GET
      auth: true
      docs: List all Datapoints for the Dataset with the given ID.
      pagination:
        offset: $request.page
        results: $response.records
      path-parameters:
        id:
          type: string
          docs: Unique identifier for Dataset.
      display-name: List Datapoints
      request:
        name: ListDatapointsDatasetsIdDatapointsGetRequest
        query-parameters:
          version_id:
            type: optional<string>
            docs: A specific Version ID of the Dataset to retrieve.
          environment:
            type: optional<string>
            docs: Name of the Environment to retrieve a deployed Version from.
          page:
            type: optional<integer>
            docs: Page number for pagination.
          size:
            type: optional<integer>
            docs: Page size for pagination. Number of Datapoints to fetch.
      response:
        docs: Successful Response
        type: root.PaginatedDatapointResponse
      errors:
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              records:
                - inputs:
                    inputs: inputs
                  messages:
                    - role: user
                  target:
                    target: target
                  id: id
              page: 1
              size: 1
              total: 1
    listVersions:
      path: /datasets/{id}/versions
      method: GET
      auth: true
      docs: Get a list of the versions for a Dataset.
      path-parameters:
        id:
          type: string
          docs: Unique identifier for Dataset.
      display-name: List Versions
      request:
        name: ListVersionsDatasetsIdVersionsGetRequest
        query-parameters:
          status:
            type: optional<root.VersionStatus>
            docs: >-
              Filter versions by status: 'uncommitted', 'committed'. If no
              status is provided, all versions are returned.
          environment:
            type: optional<string>
            docs: >-
              Name of the environment to filter versions by. If no environment
              is provided, all versions are returned.
          evaluation_aggregates: optional<boolean>
      response:
        docs: Successful Response
        type: root.ListDatasets
      errors:
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              records:
                - path: path
                  id: id
                  name: name
                  version_id: version_id
                  type: dataset
                  environments:
                    - id: id
                      created_at: '2024-01-15T09:30:00Z'
                      name: name
                      tag: default
                  created_at: '2024-01-15T09:30:00Z'
                  updated_at: '2024-01-15T09:30:00Z'
                  created_by:
                    id: id
                    email_address: email_address
                  status: uncommitted
                  last_used_at: '2024-01-15T09:30:00Z'
                  commit_message: commit_message
                  datapoints_count: 1
                  datapoints:
                    - id: id
    commit:
      path: /datasets/{id}/versions/{version_id}/commit
      method: POST
      auth: true
      docs: Commit the Dataset Version with the given ID.
      path-parameters:
        id:
          type: string
          docs: Unique identifier for Dataset.
        version_id:
          type: string
          docs: Unique identifier for the specific version of the Dataset.
      display-name: Commit
      request:
        body: root.CommitRequest
      response:
        docs: Successful Response
        type: root.DatasetResponse
      errors:
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            id: id
            version_id: version_id
          request:
            commit_message: commit_message
          response:
            body:
              path: path
              id: id
              name: name
              version_id: version_id
              type: dataset
              environments:
                - id: id
                  created_at: '2024-01-15T09:30:00Z'
                  name: name
                  tag: default
              created_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_by:
                id: id
                email_address: email_address
                full_name: full_name
              status: uncommitted
              last_used_at: '2024-01-15T09:30:00Z'
              commit_message: commit_message
              datapoints_count: 1
              datapoints:
                - inputs:
                    inputs: inputs
                  messages:
                    - role: user
                  target:
                    target: target
                  id: id
    uploadCsv:
      path: /datasets/{id}/datapoints/csv
      method: POST
      auth: true
      docs: >-
        Add Datapoints from a CSV file to a Dataset.


        This will create a new committed version of the Dataset with the
        Datapoints from the CSV file.


        If either `version_id` or `environment` is provided, the new version
        will be based on the specified version,

        with the Datapoints from the CSV file added to the existing Datapoints
        in the version.

        If neither `version_id` nor `environment` is provided, the new version
        will be based on the version

        of the Dataset that is deployed to the default Environment.
      path-parameters:
        id:
          type: string
          docs: Unique identifier for the Dataset
      display-name: Upload Csv
      request:
        name: Body_upload_csv_datasets__id__datapoints_csv_post
        query-parameters:
          version_id:
            type: optional<string>
            docs: ID of the specific Dataset version to base the created Version on.
          environment:
            type: optional<string>
            docs: >-
              Name of the Environment identifying a deployed Version to base the
              created Version on.
        body:
          properties:
            file: file
            commit_message:
              type: string
              docs: Commit message for the new Dataset version.
        content-type: multipart/form-data
      response:
        docs: Successful Response
        type: root.DatasetResponse
      errors:
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            id: id
          request:
            commit_message: commit_message
          response:
            body:
              path: path
              id: id
              name: name
              version_id: version_id
              type: dataset
              environments:
                - id: id
                  created_at: '2024-01-15T09:30:00Z'
                  name: name
                  tag: default
              created_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_by:
                id: id
                email_address: email_address
                full_name: full_name
              status: uncommitted
              last_used_at: '2024-01-15T09:30:00Z'
              commit_message: commit_message
              datapoints_count: 1
              datapoints:
                - inputs:
                    inputs: inputs
                  messages:
                    - role: user
                  target:
                    target: target
                  id: id
    fromLogs:
      path: /datasets/{id}/datapoints/logs
      method: POST
      auth: true
      docs: >-
        Add Datapoints from Logs to a Dataset.


        This will create a new committed version of the Dataset with the
        Datapoints from the Logs.


        If either `version_id` or `environment` is provided, the new version
        will be based on the specified version,

        with the Datapoints from the Logs added to the existing Datapoints in
        the version.

        If neither `version_id` nor `environment` is provided, the new version
        will be based on the version

        of the Dataset that is deployed to the default Environment.
      path-parameters:
        id:
          type: string
          docs: Unique identifier for the Dataset
      display-name: From Logs
      request:
        name: BodyFromLogsDatasetsIdDatapointsLogsPost
        query-parameters:
          version_id:
            type: optional<string>
            docs: ID of the specific Dataset version to base the created Version on.
          environment:
            type: optional<string>
            docs: >-
              Name of the Environment identifying a deployed Version to base the
              created Version on.
        body:
          properties:
            log_ids:
              docs: List of Log IDs to create Datapoints from.
              type: list<string>
            commit_message:
              type: string
              docs: Commit message for the new Dataset version.
      response:
        docs: Successful Response
        type: root.DatasetResponse
      errors:
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            id: id
          request:
            log_ids:
              - log_ids
            commit_message: commit_message
          response:
            body:
              path: path
              id: id
              name: name
              version_id: version_id
              type: dataset
              environments:
                - id: id
                  created_at: '2024-01-15T09:30:00Z'
                  name: name
                  tag: default
              created_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_by:
                id: id
                email_address: email_address
                full_name: full_name
              status: uncommitted
              last_used_at: '2024-01-15T09:30:00Z'
              commit_message: commit_message
              datapoints_count: 1
              datapoints:
                - inputs:
                    inputs: inputs
                  messages:
                    - role: user
                  target:
                    target: target
                  id: id
    deploy:
      path: /datasets/{id}/environments/{environment_id}
      method: POST
      auth: true
      docs: |-
        Deploy Dataset to Environment.

        Set the deployed Version for the specified Environment.
      path-parameters:
        id:
          type: string
          docs: Unique identifier for Dataset.
        environment_id:
          type: string
          docs: Unique identifier for the Environment to deploy the Version to.
      display-name: Deploy
      request:
        name: DeployDatasetsIdEnvironmentsEnvironmentIdPostRequest
        query-parameters:
          version_id:
            type: string
            docs: Unique identifier for the specific version of the Dataset.
      response:
        docs: Successful Response
        type: root.DatasetResponse
      errors:
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            id: id
            environment_id: environment_id
          query-parameters:
            version_id: version_id
          response:
            body:
              path: path
              id: id
              name: name
              version_id: version_id
              type: dataset
              environments:
                - id: id
                  created_at: '2024-01-15T09:30:00Z'
                  name: name
                  tag: default
              created_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_by:
                id: id
                email_address: email_address
                full_name: full_name
              status: uncommitted
              last_used_at: '2024-01-15T09:30:00Z'
              commit_message: commit_message
              datapoints_count: 1
              datapoints:
                - inputs:
                    inputs: inputs
                  messages:
                    - role: user
                  target:
                    target: target
                  id: id
    removeDeployment:
      path: /datasets/{id}/environments/{environment_id}
      method: DELETE
      auth: true
      docs: |-
        Remove deployment of Dataset from Environment.

        Remove the deployed Version for the specified Environment.
      path-parameters:
        id:
          type: string
          docs: Unique identifier for Dataset.
        environment_id:
          type: string
          docs: Unique identifier for the Environment to remove the deployment from.
      display-name: Remove Deployment
      errors:
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            id: id
            environment_id: environment_id
    listEnvironments:
      path: /datasets/{id}/environments
      method: GET
      auth: true
      docs: List all Environments and their deployed versions for the Dataset.
      path-parameters:
        id:
          type: string
          docs: Unique identifier for Dataset.
      display-name: List Environments
      response:
        docs: Successful Response
        type: list<root.FileEnvironmentResponse>
      errors:
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              - id: id
                created_at: '2024-01-15T09:30:00Z'
                name: name
                tag: default
                file:
                  path: path
                  id: id
                  name: name
                  version_id: version_id
                  type: prompt
                  environments:
                    - id: id
                      created_at: '2024-01-15T09:30:00Z'
                      name: name
                      tag: default
                  created_at: '2024-01-15T09:30:00Z'
                  updated_at: '2024-01-15T09:30:00Z'
                  created_by:
                    id: id
                    email_address: email_address
                  status: uncommitted
                  last_used_at: '2024-01-15T09:30:00Z'
                  model: model
                  endpoint: complete
                  template: template
                  provider: openai
                  max_tokens: 1
                  temperature: 1.1
                  top_p: 1.1
                  stop: stop
                  presence_penalty: 1.1
                  frequency_penalty: 1.1
                  seed: 1
                  response_format:
                    type: json_object
                  tools:
                    - name: name
                      description: description
                  linked_tools:
                    - name: name
                      description: description
                      id: id
                      version_id: version_id
                  commit_message: commit_message
                  version_logs_count: 1
                  total_logs_count: 1
                  inputs:
                    - name: name
                  evaluator_aggregates:
                    - value: 1.1
                      evaluator_id: evaluator_id
                      evaluator_version_id: evaluator_version_id
                      created_at: '2024-01-15T09:30:00Z'
                      updated_at: '2024-01-15T09:30:00Z'
  display-name: Datasets
docs: >+
  Datasets are collections of input-output pairs that you can use within
  Humanloop for Evaluations.


  #### What is a Dataset?


  A Dataset is a collection of unique Datapoints. These Datapoints contain
  `inputs` and `target` fields. The `inputs`

  are used to populate a Prompt's template and the `target` can be referenced by
  Evaluators to evaluate the quality of

  the generated output.


  Note that Humanloop automatically deduplicates Datapoints. If you try to add a
  Datapoint that already exists, it will

  be ignored. If you intentionally want to add a duplicate Datapoint, you can
  add a unique identifier to the Datapoint's

  inputs such as `{_dedupe_id: <unique ID>}`.


  #### Creating Dataset versions


  Datasets have immutable versions. To add/remove Datapoint to/from an existing
  version, use the **Create** endpoint

  and specify `action` as `"add"` or `"remove"` respectively. You may also
  specify the `version_id` or `environment`

  query parameters to identify the existing version to base the new version on.
  If neither is provided, the version

  deployed to the default Environment will be used.

